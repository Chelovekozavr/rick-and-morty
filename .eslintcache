[{"D:\\projects\\rick-and-morty\\src\\App.js":"1","D:\\projects\\rick-and-morty\\src\\components\\Header.jsx":"2","D:\\projects\\rick-and-morty\\src\\api\\RickAndMortyApi.js":"3","D:\\projects\\rick-and-morty\\src\\components\\Episodes.jsx":"4","D:\\projects\\rick-and-morty\\src\\index.js":"5"},{"size":246,"mtime":1606326105726,"results":"6","hashOfConfig":"7"},{"size":776,"mtime":1606339463303,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1606327801280,"results":"9","hashOfConfig":"7"},{"size":2211,"mtime":1606344897609,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4pat8o",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\rick-and-morty\\src\\App.js",[],"D:\\projects\\rick-and-morty\\src\\components\\Header.jsx",[],"D:\\projects\\rick-and-morty\\src\\api\\RickAndMortyApi.js",[],"D:\\projects\\rick-and-morty\\src\\components\\Episodes.jsx",["23"],"import React, { useState, useEffect } from 'react';\n\nimport { getEpisodes } from '../api/RickAndMortyApi';\nimport '../styles/episodes.scss';\n\n\nexport const Episodes = () => {\n  const [episodes, setEpisodes] = useState([]);\n  const [query, setQuery] = useState('');\n/*\n  useEffect(() => {\n    getEpisodes()\n      .then(result => console.log(result))\n  }, []);*/\n\n  useEffect(() => {\n    getEpisodes()\n      .then(result => setEpisodes(result.filter(item => item.name.toLowerCase().includes(query.toLowerCase()))))\n  }, []);\n\n\n/*\n  useEffect(() => {\n    setEpisodes(episodes.filter(episode => episode.toLowerCase().includes(query.toLowerCase())));\n  }, []);*/\n/*\n  const handleChange = (event) => {\n    setSelectedPostId();\n    getPosts(event.target.value)\n      .then(result => setPosts(result));\n\n      console.log(event)\n      console.log('this is query:' + query)\n\n      setEpisodes(getEpisodes()\n      .then(result => result.filter(item => item.name.toLowerCase().includes(event.toLowerCase())))\n      )\n  };*/\n\n  const x = (event) => {\n    setQuery(event);\n  }\n\n  return (\n    <>\n      <div className=\"episodes\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"episodes__input\"\n          placeholder=\"Type episode name\"\n          onChange={(event) => {\n            x(event.target.value)\n          }}\n        />\n        <table className=\"episodes-table\">\n          <thead className=\"episodes-table__head\">\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Episode number</th>\n              <th>Release date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {episodes.map(({ name, episode, id, air_date }) => (\n              <tr\n                key={id}\n                className=\"episodes-table__episode\"\n              >\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{episode}</td>\n                <td>{air_date}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"pages-container\">\n          <span>\n            1\n          </span>\n          <span>\n            2\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n","D:\\projects\\rick-and-morty\\src\\index.js",[],{"ruleId":"24","severity":1,"message":"25","line":19,"column":6,"nodeType":"26","endLine":19,"endColumn":8,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEpisodes' needs the current value of 'query'.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [query]",{"range":"31","text":"32"},[518,520],"[query]"]